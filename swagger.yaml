swagger: "2.0"
info:
  description: "API template"
  version: "0.0.0"
  title: "API template"
host: "localhost:3000"
basePath: "/api/v1"
produces:
  - "application/json"
securityDefinitions:
  authorization:
    type: apiKey
    name: authorization
    in: header
paths:
  /customers:
    get:
      tags:
        - customers
      summary: Send a list of customers
      parameters:
        - name: firstname
          type: string
          in: query
          description: FirstName of the customers
        - name: lastname
          type: string
          in: query
          description: LastName of the customers
        - name: city
          type: string
          in: query
          description: City of the customers
      responses:
        200:
          description: List of filtered customers according to the restrictions given via querystring
          schema:
            type: array
            items:
              $ref: "#/definitions/Customer"
        400:
          description: Missing data
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - customers
      summary: Return the new customer
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Customer"
      responses:
        201:
          description: Returns a new customer
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: Missing data
          schema:
            $ref: "#/definitions/Error"
  /customers/{reference}:
    get:
      tags:
        - customers
      summary: Returns an unique customer
      parameters:
        - name: reference
          type: string
          required: true
          in: path
          description: The customer reference
      responses:
        200:
          description: Returns an unique customer
          schema:
            $ref: "#/definitions/Customer"
        404:
          description: The given customer reference does not exists in database
          schema:
            $ref: "#/definitions/Error"
    put:
      tags:
        - customers
      summary: Update a given customer
      parameters:
        - name: firstname
          type: string
          in: path
          description: The customer firstname
        - name: lastname
          type: string
          in: path
          description: The customer lastname
        - name: city
          type: string
          in: path
          description: The customer city
      responses:
        200:
          description: Returns an unique customer
          schema:
            $ref: "#/definitions/Customer"
        400:
          description: Missing data
          schema:
            $ref: "#/definitions/Error"
        404:
          description: The given data does not exists in database
          schema:
            $ref: "#/definitions/Error"
    delete:
      tags:
        - customers
      summary: Delete a given customer
      parameters:
        - name: reference
          type: string
          in: path
          description: The customer reference
      response:
        204:
          description: The customer has been deleted
        404:
          description: The given customer reference does not exists in database
          schema:
            $ref: "#/definitions/Error"
  /flights:
    get:
      tags:
        - flights
      summary: Returns a list of flights
      parameters:
        - name: origin
          type: string
          in: query
          description: Code of the airport where the flight take off
        - name: destination
          type: string
          in: query
          description: Code of the airport where the flight will land
      responses:
        200:
          description: List of filtered flights according to the restrictions given via querystring
          schema:
            type: array
            items:
              $ref: "#/definitions/Flight"
    post:
      tags:
        - flights
      summary: Creates a flights
      security:
        - authorization: []
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/Flight"
          description: Code of the airport where the flight take off
      responses:
        201:
          description: Created flight
          schema:
            type: object
            schema:
              $ref: "#/definitions/Flight"
  /flights/{reference}:
    get:
      tags:
        - flights
      parameters:
        - in: path
          name: reference
          required: true
          type: string
      responses:
        200:
          description: The given flight
          schema:
            $ref: "#/definitions/Flight"
    put:
      tags:
        - flights
      parameters:
        - in: path
          name: reference
          required: true
          type: string
        - name: body
          in: body
          type: object
          properties:
            origin:
              type: string
            destination:
              type: string
      response:
        200:
          description: The updated flight
          schema:
            $ref: "#/definitions/Flight"
  /bookings:
    post:
      tags:
        - bookings
      parameters:
        - in: body
          name: body
          type: object
          properties:
            flight_ref:
              type: string
            username:
              type: string
      responses:
        201:
          description: "The new booking"
          schema:
            $ref: "#/definitions/Booking"
  /bookings/{reference}:
    put:
      tags:
        - bookings
      parameters:
        - in: body
          name: body
          type: object
          properties:
            flight_ref:
              type: string
      responses:
        200:
          description: "The updated booking"
          schema:
            $ref: "#/definitions/Booking"
definitions:
  Customer:
    type: object
    properties:
      firstname:
        type: string
      lastname:
        type: string
      city:
        type: string
      reference:
        type: string
    example:
      firstname: "John"
      lastname: "Smith"
      city: "London"
      reference: "JS_123456"
  Flight:
    type: object
    properties:
      reference:
        type: string
        description: Identifier of the flight
      origin:
        type: string
        description: Where the flight will take off
      destination:
        type: string
        description: Where the flight will land
      placesLeft:
        type: number
        description: Available seats on the plane
      company:
        type: string
        description: Name of the company
      price:
        type: number
      date:
        type: string
        format: date
    example:
      reference: "AF-123"
      origin: "CDG"
      destination: "BOG"
      date: "2018-03-06T10:32:31.175Z"
      placesLeft: 30
      price: 200
      company: "Air France"
  Booking:
    type: object
    properties:
      reference:
        type: string
      username:
        type: string
      flight_ref:
        type: string
    exemple:
      reference: "ABC-123"
      username: "jomaora"
      flight_ref: "AF_123"
  Error:
    type: object
    properties:
      message:
        type: string
    example:
      message: Description error
